@model AllStocked.Product

@{
    ViewBag.Title = "Create";
}

<h2>Create a new product</h2>

@*these are the buttons*@
    

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @*<div class="form-group">
                        @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AccountID, "AccountID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("AccountID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AccountID, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <a href="#" data-toggle="tooltip" data-placement="inherit" title="Name of your product here." style="border-style:solid; border-radius: 50%; padding: 0 3px;">?</a>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryID, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                    <a href="#" data-toggle="tooltip" title="Choose a category this item belongs to. This helps when searching." style="border-style:solid; border-radius: 50%; padding: 0 3px;">?</a>
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Par, htmlAttributes: new { @class = "control-label col-md-2" })
                    <a href="#" data-toggle="tooltip" title="The optimal quantity of your product when fully stocked." style="border-style:solid; border-radius: 50%; padding: 0 3px;">?</a>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Par, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Par, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Demand, htmlAttributes: new { @class = "control-label col-md-2" })
                    <a href="#" data-toggle="tooltip" title="The supply quantity when item will be added to shopping list." style="border-style:solid; border-radius: 50%; padding: 0 3px;">?</a>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Demand, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Demand, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Supply, htmlAttributes: new { @class = "control-label col-md-2" })
                    <a href="#" data-toggle="tooltip" title="The current quantity of a product you have or last updated." style="border-style:solid; border-radius: 50%; padding: 0 3px;">?</a>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Supply, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Supply, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <a href="#" data-toggle="tooltip" title="Description of product. (example: suppliers/ size/ cost ect.)" style="border-style:solid; border-radius: 50%; padding: 0 3px;">?</a>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
<div id="CategorySidebar">
    <h5>Customized Categories</h5> <hr />
    <div class="letsGetMargin"><a href="@Url.Action("Index", "Categories")" class="CustomButton">View Categories</a></div>
    <div><a href="@Url.Action("Create", "Categories")" class="CustomButton">Create New Category</a></div>
    @*<a class="CustomButton">@Html.ActionLink("Create New Category", "Create", "Categories")</a>*@
</div>


        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }

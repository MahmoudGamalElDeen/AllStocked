@model IEnumerable<AllStocked.Product>

@{
    ViewBag.Title = "Index";
}

@using PagedList.Mvc;
@using PagedList;

<h2>Products</h2>

<div class="searchform">
    <h4>Search products-</h4>

    @*SEARCH FORM*@

    @using (Html.BeginForm("Index", "Products", FormMethod.Get))
    {
        <p>
            Find by Name or Category: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" />
        </p>
    }
</div>
@*Display Product attributes*@
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ProductName)
        </th>
        <th class="removewhenphonesize">
            @Html.DisplayNameFor(model => model.Par)
        </th>
        <th class="removewhenphonesize">
            @Html.DisplayNameFor(model => model.Demand)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Supply)
        </th>
        <th class="removewhenphonesize">
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th></th>
    </tr>
    @*Show product values*@
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td class="removewhenphonesize">
                @Html.DisplayFor(modelItem => item.Par)
            </td>
            <td class="removewhenphonesize">
                @Html.DisplayFor(modelItem => item.Demand)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Supply)
            </td>
            <td class="removewhenphonesize">
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ProductID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ProductID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ProductID })
            </td>
        </tr>
    }

</table>
@*@Html.PagedListPager((IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("Index", new { page }))*@
@*Page @(((IPagedList)Model).PageCount < ((IPagedList)Model).PageNumber ? 0 : ((IPagedList)Model).PageNumber) of @((IPagedList)Model).PageCount*@

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index",
    new { page, currentFilter = ViewBag.CurrentFilter }))